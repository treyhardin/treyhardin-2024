---
import Star from "../../../icons/Star.astro";
import { getBlogPosts, urlFor } from "../../../utils/sanityClient";
import Button from "../../global/Button.astro";

const data = await getBlogPosts();
// console.log(data)

const { content } = Astro.props;
---
<section class="blog">
  <div class="content">

    <div class="section-title">
      <span class="featured-post">
        <h2 class="post-title h1">{data[0].title}</h2>
        <Button type="primary" url="#" text="Read More" />
      </span>
      <p class="caption">Musings</p>
    </div>

    <div class="section-detail">
      <div class="posts">
        {data.map((post, i) => {
          if (i > 0 && i < 4) return (
            <a href="#" class="related-post">
              <p class="utility">{post.category.title}</p>
              <p class="related-post-title h6">{post.title}</p>
            </a>
          )
        })}
      </div>
      <Button type="secondary" style="ticker" url="#" text="Read More" />
    </div>

    <img 
      class="image"
      width="100vw"
      height="100vh"
      sizes="100vw"
      srcset={`
        ${urlFor(data[0].mainImage).width(600).height(1200).auto('format').url()} 600w,
        ${urlFor(data[0].mainImage).width(960).height(1920).auto('format').url()} 960w,
        ${urlFor(data[0].mainImage).width(1280).height(640).auto('format').url()} 1280w,
        ${urlFor(data[0].mainImage).width(1440).height(720).auto('format').url()} 1440w,
        ${urlFor(data[0].mainImage).width(1880).height(940).auto('format').url()} 1880w,
        ${urlFor(data[0].mainImage).width(2048).height(1024).auto('format').url()} 2048w,
        ${urlFor(data[0].mainImage).width(2880).height(1440).auto('format').url()} 2880w,
      `}
      src={urlFor(data[0].mainImage).url()} 
    />
  </div>
</section>

<style>
  .blog {
    height: calc(100svh - var(--header-height));
    /* display: none; */
    padding: var(--page-margin);
    /* margin: var(--space-md) 0; */
    display: flex;
    flex-direction: column;
    justify-content: stretch;
    align-items: stretch;
  }

  .content {
    flex-basis: 100%;
    border-radius: var(--radius-lg);
    overflow: hidden;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: space-between;
    color: var(--color-reverse);
  }

  .section-title {
    position: relative;
    z-index: 1;
    padding: var(--space-sm);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: var(--space-lg);
    /* mix-blend-mode: difference; */
  }

  .featured-post {
    display: flex;
    flex-direction: column;
    gap: var(--space-2xs);
    align-items: flex-start;
    max-width: 80ch;
  }

  .featured-post .post-title {
    margin: 0;
  }

  .section-detail {
    position: relative;
    z-index: 1;
    padding: var(--space-sm);
    align-self: flex-end;
    max-width: 50ch;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-2xs);
  }

  .posts {
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }

  .related-post {
    padding: var(--space-2xs) 0;
    display: flex;
    flex-direction: column;
    gap: var(--space-3xs);
  }

  .related-post::after {
    width: 100%;
    background: currentColor;
    opacity: 0.2;
  }

  .related-post:last-child::after {
    display: none;
  }

  .related-post-title {
    margin: 0;
  }

  .image {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
  }

  @media screen and (max-width: 768px) {
    .section-detail {
      max-width: 100%;
    }
  }
</style>