---
import Star from "../../../icons/Star.astro";
import { getBlogPosts, urlFor } from "../../../utils/sanityClient";
import Button from "../../global/Button.astro";
import SanityImage from "../../helpers/SanityImage.astro";

const data = await getBlogPosts();
// console.log(data)

const { content } = Astro.props;

// console.log(content)
const featuredPost = content && content.featuredPost ? content.featuredPost : data[0]
console.log(featuredPost)
---
<section class="blog">
  <div class="content">

    <div class="section-title">
      <span class="featured-post">
        <h2 class="post-title h1">{featuredPost.title}</h2>
        <Button type="primary" url={`/musings/${featuredPost.slug.current}`} text="Read More" />
      </span>
      <p class="caption">Musings</p>
    </div>

    <div class="section-detail">
      <div class="posts">
        {data.map((post, i) =>  (
            <a href={`/musings/${post.slug.current}`} class="related-post">
              <p class="utility">{post.category.title}</p>
              <p class="related-post-title h6">{post.title}</p>
            </a>
          )
        )}
      </div>
      <Button type="secondary" style="ticker" url="/musings" text="Read More" />
    </div>

    <div class="media">
      <SanityImage 
        image={featuredPost.mainImage}
        sizes="100vw"
        threeImage={true}
      />
    </div>
  </div>
</section>

<style>
  .blog {
    height: calc(100svh - var(--header-height));
    /* display: none; */
    padding: var(--page-margin);
    /* margin: var(--space-md) 0; */
    display: flex;
    flex-direction: column;
    justify-content: stretch;
    align-items: stretch;
  }

  .content {
    flex-basis: 100%;
    border-radius: var(--radius-lg);
    overflow: hidden;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: space-between;
    color: var(--color-reverse);
  }

  .section-title {
    position: relative;
    z-index: 1;
    padding: var(--space-sm);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: var(--space-lg);
    /* mix-blend-mode: difference; */
  }

  .featured-post {
    display: flex;
    flex-direction: column;
    gap: var(--space-2xs);
    align-items: flex-start;
    max-width: 80ch;
  }

  .featured-post .post-title {
    margin: 0;
  }

  .section-detail {
    position: relative;
    z-index: 1;
    padding: var(--space-sm);
    align-self: flex-end;
    max-width: 50ch;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-2xs);
  }

  .posts {
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }

  .related-post {
    padding: var(--space-2xs) 0;
    display: flex;
    flex-direction: column;
    gap: var(--space-3xs);
  }

  .related-post::after {
    width: 100%;
    background: currentColor;
    opacity: 0.2;
  }

  .related-post:last-child::after {
    display: none;
  }

  .related-post-title {
    margin: 0;
  }

  .media {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
  }

  @media screen and (max-width: 768px) {
    .section-detail {
      max-width: 100%;
    }
  }
</style>