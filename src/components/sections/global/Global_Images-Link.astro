---
import Star from "../../../icons/Star.astro";
import { urlFor } from "../../../utils/sanityClient";
import SanityImage from "../../helpers/SanityImage.astro";
import GlobalTickerLink from "./Global_Ticker-Link.astro";

const { content } = Astro.props;
const tickerCount = 10;
const tickerText = [];

for (let i = 0; i < tickerCount; i++) {
  tickerText.push(content.linkText);
}

console.log(content.images[0])
---
<section class="section_images-link">

  <div class="section-title">
    <span class="media-featured">
      <SanityImage 
        image={content.images[0].image}
        sizes="50vw"
      />
    </span>
    <span class="text">
      <p class="description caption">{content.description}</p>
    </span>
  </div>

  <GlobalTickerLink 
    content={{
      text: content.linkText,
      url: "/work"
    }}
  />

  <div class="section-details">
    <span class="pagination">
      <p class="caption">{content.subtext}</p>
      <span class="divider"></span>
    </span>
    <span class="inline-images">
      {content.images.map((asset, i) => {
        if (i > 0){
          return (
            <span class="media-inline">
              <SanityImage 
                sizes="20vw"
                image={asset.image}
              />
            </span>
          )
        }
      })}
    </span>
  </div>

</section>

<script>



  // const timeline = 

import { gsap, mediaScroll } from "../../../utils/gsap"

  const section = document.querySelector('.section_images-link')
  const images = section.querySelectorAll('img')

  const timeline = gsap.timeline({ scrollTrigger: {
    trigger: section,
    start: "top 80%"
  }, defaults: { ease: "power4.out", duration: 0.8 }})

  images.forEach((image) => {
    mediaScroll(image)
  })

</script>

<style>
  .section_images-link {
    padding: var(--space-xl) 0;
    /* height: calc(100svh - var(--header-height)); */
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: stretch;
    gap: var(--page-margin);
    overflow: hidden;
  }

  .section-title {
    padding: 0 var(--page-margin);
    display: flex;
    flex-direction: row;
    justify-content: stretch;
    gap: var(--space-xs);
    /* flex: 0 1 50%; */
  }

  .section-title .text {
    flex-grow: 1;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
  }

  .section-title .description {
    flex: 0 1 100%;
    max-width: 40ch;
    text-align: justify;
  }

  .section-title .media-featured {
    flex: 0 0 40%;
    aspect-ratio: 4 / 3;
  }

  .section-title .media-featured .image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  

  .media-featured,
  .media-inline {
    border-radius: var(--radius-sm);
    overflow: hidden;
  }

  .section-details {
    display: flex;
    flex-direction: row;
    justify-content: stretch;
    align-items: flex-end;
    padding: 0 var(--page-margin);
    gap: var(--space-sm);
    /* flex: 0 1 50%; */
    align-self: stretch;
  }

  .pagination {
    flex: 1 0 auto;
    display: flex;
    flex-direction: row;
    justify-content: stretch;
    align-items: center;
    gap: var(--space-2xs);
    color: var(--color-foreground-secondary);
    /* min-width: 200px; */
  }

  .pagination .divider {
    flex-grow: 1;
    height: 1px;
    background: currentColor;
  }

  .inline-images {
    display: flex;
    flex-direction: row;
    justify-content: stretch;
    flex: 0 0 60%;
    gap: var(--page-margin);
  }

  .media-inline {
    flex: 0 1 100%;
  }

  .inline-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  @media screen and (max-width: 768px) {
    .pagination {
      display: none;
    }

    .inline-images {
      flex: 0 0 100%;
    }
  }
  
</style>