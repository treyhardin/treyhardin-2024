---
import { urlFor } from "../../../utils/sanityClient";
import Button from '../../global/Button.astro'

const { content } = Astro.props;
---
<section class="video-text">

  <span class="section-title">
    <h2 class="heading">
      <div class="heading-line h3">{content.headingLine1}</div>
      <div class="heading-line h3">{content.headingLine2}</div>
    </h2>
    <div class="title-content">
      <p class="section-video-text_description description caption">{content.description}</p>
      <Button type="secondary" text="Read More" url="/test" />
    </div>
  </span>

  <span class="media">
    {content.video ? 
      <video
        class="asset video"
        src={content.videoURL}
        poster={urlFor(content.image).width(480).height(800).auto('format').url()}
        loop
        autoplay
        muted
        playsinline
      />
     : 
      <img 
        class="asset image"
        id="section-video-text_media"
        sizes="(max-width: 768px): 100vw, 33vw"
        srcset={`
          ${urlFor(content.image).width(600).height(1000).auto('format').url()} 600w,
          ${urlFor(content.image).width(800).height(1000).auto('format').url()} 800w,
          ${urlFor(content.image).width(1280).height(1000).auto('format').url()} 1280w,
        `}
        src={urlFor(content.image).url()} 
      />
    }

  </span>

  <span class="section-details">
    <ul class="details-table">
      {content.details.map((detail) => (
        <li class="section-video-text_detail detail utility">{detail}</li>
      ))}
    </ul>
  </span>

</section>

<script>
  import { gsap, mediaZoom, scrambleIn, mediaScroll } from "../../../utils/gsap";

  const sectionVideoText = document.querySelector(".video-text")
  const headingLines = sectionVideoText.querySelectorAll(".heading-line")
  const description = document.querySelector(".title-content")
  const media = sectionVideoText.querySelector(".asset")

  const sectionTimeline = gsap.timeline({ scrollTrigger: {
    trigger: sectionVideoText,
    start: "top 80%"
  }, defaults: { ease: "power4.out", duration: 0.8 }})


  mediaScroll(media)
  mediaZoom(media, sectionTimeline)
  scrambleIn(headingLines, sectionTimeline, "<")

  sectionTimeline.from(description, { 
    opacity: 0,
    y: 40,
  }, "<0.4")

  sectionTimeline.from(".section-video-text_detail", {
    opacity: 0,
    stagger: 0.1
  }, "<0.2")
  
  
  

</script>

<style>
  .video-text {
    /* padding: 0 var(--page-margin) var(--space-md); */
    display: flex;
    flex-direction: row;
    align-items: stretch;
    padding: var(--space-lg) var(--page-margin-narrow);
    gap: var(--space-md);
    /* min-height: 80svh; */
    /* width: 100%; */
    /* display: none; */
  }

  .section-title {
    flex: 0 1 33%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: var(--space-md) 0;
    gap: var(--space-sm);
  }

  .section-video-text_heading {
    /* visibility: hidden; */
  }

  .heading * {
    margin: 0;
    /* visibility: hidden; */
  }

  .heading *:nth-child(2){
    margin-left: 1em;
  }

  .title-content {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-2xs);
    max-width: 30ch;
    align-self: flex-end;
  }

  .description {
    /* visibility: hidden; */
    word-wrap: break-word;
    word-break: break-all;
    text-align: justify;
  }

  .media {
    aspect-ratio: 3 / 4;
    flex: 1 1 50%;
    position: relative;
    border-radius: var(--radius-md);
    overflow: hidden;
    max-height: calc(100svh - var(--header-height) - var(--page-margin));
  }

  .media img,
  .media video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
  }

  .section-details {
    flex: 0 1 33%;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: center;
  }

  .details-table {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    margin: 0;
    padding: 0;
    list-style: none;
    border: 0.5px solid var(--color-foreground);
    overflow: hidden;
    border-radius: var(--radius-sm);
  }

  .detail {
    margin: 0;
    padding: 0;
    text-align: center;
    padding: var(--space-3xs);
    overflow: hidden;
    color: var(--color-foreground);
    border: 0.5px solid var(--color-foreground);
    /* visibility: hidden; */
  }

  @media screen and (max-width:768px) {
    .video-text {
      flex-direction: column;
      gap: var(--space-sm);
    }
    .section-title {
      flex: 0 0 auto;
      flex-direction: row;
      padding: 0;
    }
    .media {
      flex: 0 0 auto;
    }

    .section-details {
      flex: 0 0 auto;
    }
  }
</style>