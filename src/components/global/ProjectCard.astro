---
import { urlFor } from "../../utils/sanityClient";
import SanityImage from "../helpers/SanityImage.astro";
import Badge from "./Badge.astro";
import Button from "./Button.astro";

const { project, style, index } = Astro.props;
---
<span class=`project-card ${style}` data-style={style}>
    
    {index >= 0 && index < 9 ? <p class="index utility">(0{index + 1})</p> : null}
    {index >= 9 ? <p class="index utility">({index + 1})</p> : null}

    <a class="media" href={`/work/${project.slug.current}`}>

        <SanityImage
            image={project.mainImage}
            sizes={style == "full-width" ? "100vw" : "100vw"}
            aspectRatio={style == "half-width" ? 3 / 4 : 4 / 3}
            threeImage={true}
        />
    </a>

    <div class="content">
        <div class="details">
            <div class="project-title">
                <a class={`${style == "half-width" ? 'h1' : style == "full-width" ? 'h2' : 'h3'}`} href={`/work/${project.slug.current}`}>{project.title}</a>
                <Badge text={project.projectType.title} url={`/work/${project.projectType.slug.current}`} />
            </div>
            <p class="project-subtitle caption">{project.subtitle}</p>
        </div>

        {style != "default" &&
        <span class="excerpt">
            <p class="caption">{project.excerpt}</p>
            <Button 
                url={`/work/${project.slug.current}`} 
                text="View Project" 
                style="ticker"
                type="secondary"
            />
        </span>
    }
    </div>
</span>

<script>
    const projectCards = document.querySelectorAll('.project-card')

    import { gsap, rotateIn } from "../../utils/gsap";

    projectCards.forEach((projectCard) => {

        const content = projectCard.querySelector('.content')
        const title = projectCard.querySelector('.project-title')
        const subtitle = projectCard.querySelector('.project-subtitle')
        const excerpt = projectCard.querySelector('.excerpt')

        const timeline = gsap.timeline({ scrollTrigger: {
            trigger: content,
            start: "top 90%"
        }, defaults: { ease: "power4.out", duration: 1.0 }})
        
        rotateIn(title, timeline)
        if (subtitle) rotateIn(subtitle, timeline, "<0.2")
        if (excerpt) rotateIn(excerpt, timeline, "<0.2")

    })
</script>

<style>

    .project-card {
        display: flex;
        flex-direction: column;
        align-items: stretch;
        flex: 0 0 calc(50% - var(--grid-gap) / 2);
        gap: var(--space-3xs);
        position: relative;
        max-width: 100%;

        .media {
            aspect-ratio: 4 / 3;
            border-radius: var(--radius-md);
            overflow: hidden;
        }
        
        .index {
            position: absolute;
            top: var(--space-2xs);
            right: var(--space-2xs);
            z-index: 2;
            color: var(--color-reverse);
            mix-blend-mode: difference;
        }

        .content {
            display: flex;
            flex-direction: column;
        }

        .excerpt {
            max-width: 50ch;
            display: flex;
            flex-direction: column;
            gap: var(--space-2xs);
        }

        .details {
            display: flex;
            flex-direction: column;
            /* gap: var(--space-3xs); */
        }

        .project-title {
            display: flex;
            flex-direction: row;
            align-items: flex-start;
            gap: var(--space-3xs);
        }

        .project-title a::after {
            /* display: none; */
            visibility: hidden;
        }
    }

    .project-card[data-style="default"],
    .project-card[data-style="full-width"] {
        padding: 0 0 var(--space-xs);
    }

    .project-card[data-style="full-width"],
    .project-card[data-style="half-width"] {
        flex: 0 0 100%;
    }

    .project-card[data-style="half-width"] {
        flex-direction: row;
        align-items: center;
        gap: var(--space-2xs);

        .content {
            flex: 0 1 auto;
            gap: var(--space-sm);
            /* justify-content: space-between; */
        }

        .media {
            aspect-ratio: 3 / 4;
            flex: 0 0 calc(50% - var(--page-margin) / 2)
        }

        .excerpt {
            padding-left: var(--space-sm);
        }
    }

    .project-card[data-style="full-width"] {

        .content {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
        }

    }


    @media screen and (max-width: 768px) {

        .project-card[data-style="half-width"] {
            flex-direction: column;
            align-items: stretch;
            justify-content: flex-start;
            flex: 0 0 100%;
            padding-bottom: var(--space-xs);
            /* padding-block: var(--space-md); */

            .media {
                flex: 0 0 auto;
                max-width: 100%;
                /* height: auto; */
                /* width: 100%; */
            }

        }

        .project-card {

            .details {
                gap: var(--space-2xs);
            }

            .project-title {
                flex-direction: column;
                gap: 0;
            }
            
            /* padding-block: var(--space-xl); */
            .excerpt {
                padding-left: 0;
                max-width: 100%;
                display: none;
            }
        }
    }

</style>
