---
import { Icon } from 'astro-icon/components'
const { text, url, type, style, icon } = Astro.props;
const tickerIterations = 20;

const tickerContent = []
for( let i=0; i < tickerIterations; i++ ) {
  tickerContent.push(text)
}
---
<a class={`button button-${type} button-${style}`} href={url}>
  { style == "ticker" ? 
    <span class="ticker-track">
    {tickerContent.map((element) => (
      <Icon name="star" />
      <span class="button-text">{element}</span>
    ))}
    </span>
  :
    <Icon name="star" />
    <span class="button-text">{text}</span>
   }
</a>

<style>
  .button {
    position: relative;
    padding: 0 var(--space-2xs);
    border-radius: var(--radius-sm);
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: var(--space-3xs);
    height: var(--button-height);
    outline: none;
    overflow: hidden;
  }


  .button:hover [data-icon],
  .button:hover .button-text {
    /* animation: button-hover 0.1s linear 0s; */
  }

  .button-primary {
    color: var(--color-background);
    background: var(--color-foreground);
    transition: background var(--anim-sm);
  }

  .button-primary:hover {
    background: var(--color-brand);
  }

  .button-secondary {
    border: 1px solid var(--color-foreground);
  }

  .button-secondary::after {
    content: "";
    background: var(--color-brand);
    position: absolute;
    right: 0;
    left: 0;
    top: var(--button-height);
    width: 100%;
    height: auto;
    aspect-ratio: 1 / 1;
    border-radius: var(--radius-rounded) var(--radius-rounded) 0 0;
    z-index: -1;
    translate: 0 -20%;
    transition: border-color var(--anim-md);
    scale: 1 0.5;
    filter: blur(10px);
  }

  .button-secondary:hover {
    color: var(--color-background);
    border-color: var(--color-brand);
  }

  .button-secondary:hover::after {
    translate: 0 calc(-75% );
    transition: all var(--anim-md);
    /* border-radius: 0; */
  }

  .button [data-icon] {
    flex: 0 0 var(--icon-sm);
    aspect-ratio: 1 / 1;
    animation: icon-rotate 6s linear 0s infinite;
  }

  .button:hover [data-icon] {
    animation-duration: 1s;
  }

  .button-text {
    flex: 0 0 auto;
  }

  .button-ticker {
    max-width: 100%;
    align-self: stretch;
    padding-inline: 0;
    /* overflow: hidden; */
  }

  .ticker-track {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: var(--space-3xs);
    flex-wrap: nowrap;
    animation: ticker 20s linear 0s infinite;
    /* width: max-content; */
    flex: 0 0 max-content;
    justify-content: space-between;
    /* box-sizing: content-box; */
  }

  @keyframes icon-rotate {
    from {
      rotate: 0deg;
    }
    to {
      rotate: 360deg;
    }
  }

  @keyframes ticker {
    0% {
      translate: 0 0;
    }
    100% {
      translate: calc(-50% - var(--space-3xs)) 0;
    }
  }

</style>